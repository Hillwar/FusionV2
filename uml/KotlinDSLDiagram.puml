@startuml

skinparam rectangle {
    BackgroundColor Wheat
    BorderColor Black
    Shadowing true
}

' Define class styles
skinparam class {
    BackgroundColor<<node>> PaleGreen
    BackgroundColor<<builder>> LightBlue
}

skinparam arrow {
    Color Black
}

' Define components
class FusionView <<node>> {
    +viewAttr: ViewAttr
    +state: Map<String, String>
}

class Layout <<node>> {
    +children: List<FusionView>
}

class TextNode <<node>> {
    +textAttr: TextAttr
}

class BoxNode <<node>> {
}

class ImageNode <<node>> {
}

class ColumnNode <<node>> {
}

class RowNode <<node>> {
}

class SpacerNode <<node>> {
}

class RootFusionView <<node>> {
    +rootView: FusionView
    +state: Map<String, String>
    +script: String
}

class Molecule {
    +name: String
    +view: RootFusionView
}

' Define builders
class ViewBuilder <<builder>> {
    +build(): FusionView
}

class LayoutBuilder <<builder>> {
    +build(): Layout
}

class BoxBuilder <<builder>> {
}

class ColumnBuilder <<builder>> {
}

class RowBuilder <<builder>> {
}

class TextBuilder <<builder>> {
}

class ImageBuilder <<builder>> {
}

class SpacerBuilder <<builder>> {
}

class MoleculeLoader {
}

' Relationships
FusionView <-- Layout
FusionView <-- TextNode
FusionView <-- ImageNode
FusionView <-- SpacerNode
Layout <-- BoxNode
Layout <-- ColumnNode
Layout <-- RowNode

RootFusionView --> FusionView
Molecule --> RootFusionView

ViewAttr --> FusionView
TextAttr --> TextNode

ViewBuilder <-- LayoutBuilder
LayoutBuilder <-- BoxBuilder
LayoutBuilder <-- ColumnBuilder
LayoutBuilder <-- RowBuilder
ViewBuilder <-- TextBuilder
ViewBuilder <-- ImageBuilder
ViewBuilder <-- SpacerBuilder

MoleculeLoader --> Molecule : "load()"
ViewBuilder --> FusionView : "build()"

legend right
    <b>Legend</b>
    <back:PaleGreen>Node Classes</back> : Represents UI components or layouts
    <back:LightBlue>Builder Classes</back> : Builders for creating UI components
endlegend

@enduml
